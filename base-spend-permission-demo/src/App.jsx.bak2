import { useEffect, useState } from "react";
import { createBaseAccountSDK } from "@base-org/account";
import { baseSepolia } from "viem/chains";
import { parseEther, formatEther } from "viem";
import { 
  FiCopy, 
  FiExternalLink, 
  FiCheck, 
  FiArrowRight, 
  FiClock, 
  FiUser, 
  FiShield, 
  FiDollarSign,
  FiAlertCircle,
  FiLoader,
  FiCheckCircle
} from "react-icons/fi";

// Fallback to .env file if environment variable is not set
const BACKEND_WALLET = import.meta.env.VITE_BACKEND_WALLET_ADDRESS || '0x37B2Ce02cEfb748531A17B1929b60064883E2569';
const TOKEN_ADDRESS = "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE";

export default function App() {
  const [connected, setConnected] = useState("");
  const [account, setAccount] = useState("");
  const [sdk, setSdk] = useState(null);
  const [provider, setProvider] = useState(null);
  const [loading, setLoading] = useState(false);
  const [permission, setPermission] = useState(null);
  const [allowance, setAllowance] = useState('0.00009');
  const [copied, setCopied] = useState(false);
  const [activeTab, setActiveTab] = useState('create');
  const [step, setStep] = useState(1);

  const copyToClipboard = (text) => {
    navigator.clipboard.writeText(text);
    setCopied(true);
    setTimeout(() => setCopied(false), 2000);
  };

  const formatAddress = (address) => {
    if (!address) return '';
    return `${address.slice(0, 6)}...${address.slice(-4)}`;
  };

	const handleConnect = async () => {
		if (!provider || !sdk) {
			alert("SDK not initialized");
			return;
		}

		setLoading(true);
		try {
			await provider.request({method: "wallet_connect"});

			const accounts = await provider.request({
				method: "eth_requestAccounts",
			});

			// Switch to Base Sepolia if not already on it
			await provider.request({
				method: "wallet_switchEthereumChain",
				params: [{chainId: `0x${baseSepolia.id.toString(16)}`}],
			});
			

			setAccount(accounts[0]);
			setConnected(true);
			console.log("Connected to account:", accounts[0]);
		} catch (error) {
			console.error("Error connecting to wallet:", error);
		} finally {
			setLoading(false);
		}
	};

	const handleCreatePermission = async () => {
		if (!BACKEND_WALLET) {
			alert("Please set the spender address!");
			return;
		}

		setLoading(true);

		try {
			const permission = {
				account,
				spender: BACKEND_WALLET,
				token: TOKEN_ADDRESS,
				allowance: parseEther(allowance).toString(),
				period: 2592000, // 30 days in seconds
				start: Math.floor(Date.now() / 1000),
				end: 281474976710655, // max uint48
				salt: `0x${Math.random().toString(16).slice(2)}${Math.random()
					.toString(16)
					.slice(2)}`,
				extraData: "0x",
			};

			const domain = {
				name: "Spend Permission Manager",
				version: "1",
				chainId: baseSepolia.id,
				verifyingContract: "0xf85210B21cC50302F477BA56686d2019dC9b67Ad",
			};

			const types = {
				SpendPermission: [
					{name: "account", type: "address"},
					{name: "spender", type: "address"},
					{name: "token", type: "address"},
					{name: "allowance", type: "uint160"},
					{name: "period", type: "uint48"},
					{name: "start", type: "uint48"},
					{name: "end", type: "uint48"},
					{name: "salt", type: "uint256"},
					{name: "extraData", type: "bytes"},
				],
			};

			const signature = await provider.request({
				method: "eth_signTypedData_v4",
				params: [
					account,
					JSON.stringify({
						types,
						domain,
						primaryType: "SpendPermission",
						message: permission,
					}),
				],
			});

			const newPermission = {
				permission,
				signature,
			};

			setPermission(newPermission);
			console.log('================================')
			console.log("SPEND PERMISSION CREATED")
			console.log('================================')
			console.log('\n COPY THIS TO BACKEND SCRIPT: \n')
			console.log('// Permission Object:')
			console.log(JSON.stringify(permission, null, 2))
			console.log('// Signature:')
			console.log(`"${newPermission.signature}"`)
			console.log('\n================================')
			
		} catch (error) {
			console.error("Error creating permission:", error);
		} finally {
			setLoading(false);
		}
	};

	useEffect(() => {
		const initSdk = () => {
			try {
				const baseSdk = createBaseAccountSDK({
					appName: "Base Spend Permission Demo",
					appChainIds: [baseSepolia.id],
				});

				setSdk(baseSdk);
				setProvider(baseSdk.getProvider());
				console.log("SDK initialized", baseSdk);
			} catch (error) {
				console.error("Error initializing SDK", error);
			}
		};
		initSdk();
	}, []);
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 dark:from-slate-900 dark:to-slate-800 p-4 md:p-8 transition-colors duration-200">
      <div className="max-w-3xl mx-auto">
        {/* Header */}
        <header className="text-center mb-8">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-2">
            Base Spend Permission
          </h1>
          <p className="text-gray-600 dark:text-gray-300">
            Securely manage token spending permissions on Base
          </p>
        </header>

        {/* Main Card */}
        <div className="bg-white dark:bg-slate-800 rounded-xl shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl">
          {/* Tabs */}
          <div className="flex border-b border-gray-200 dark:border-slate-700">
            <button
              onClick={() => setActiveTab('create')}
              className={`flex-1 py-4 px-6 text-center font-medium text-sm transition-colors ${
                activeTab === 'create' 
                  ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-500' 
                  : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'
              }`}
            >
              Create Permission
            </button>
            <button
              onClick={() => setActiveTab('manage')}
              className={`flex-1 py-4 px-6 text-center font-medium text-sm transition-colors ${
                activeTab === 'manage' 
                  ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-500' 
                  : 'text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'
              }`}
            >
              Manage Permissions
            </button>
          </div>

          {/* Tab Content */}
          <div className="p-6 md:p-8">
            {!connected ? (
              <div className="text-center py-8">
                <div className="mx-auto w-16 h-16 flex items-center justify-center bg-blue-100 dark:bg-blue-900/30 rounded-full mb-4">
                  <FiShield className="w-8 h-8 text-blue-600 dark:text-blue-400" />
                </div>
                <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-2">
                  Connect Your Wallet
                </h3>
                <p className="text-gray-500 dark:text-gray-400 mb-6 max-w-md mx-auto">
                  Connect your wallet to create or manage spending permissions for your Base account.
                </p>
                <button
                  onClick={handleConnect}
                  disabled={loading || !provider}
                  className="w-full md:w-auto px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors flex items-center justify-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {loading ? (
                    <>
                      <FiLoader className="animate-spin w-5 h-5" />
                      <span>Connecting...</span>
                    </>
                  ) : (
                    <>
                      <FiArrowRight className="w-5 h-5" />
                      <span>Connect Wallet</span>
                    </>
                  )}
                </button>
              </div>
            ) : (
              <div className="space-y-6">
                {/* Account Info */}
                <div className="bg-blue-50 dark:bg-slate-700/30 p-4 rounded-lg">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center space-x-3">
                      <div className="w-10 h-10 rounded-full bg-blue-100 dark:bg-blue-900/50 flex items-center justify-center">
                        <FiUser className="w-5 h-5 text-blue-600 dark:text-blue-400" />
                      </div>
                      <div>
                        <p className="text-sm font-medium text-gray-500 dark:text-gray-400">Connected Wallet</p>
                        <div className="flex items-center space-x-2">
                          <span className="font-mono text-sm text-gray-900 dark:text-white">
                            {formatAddress(account)}
                          </span>
                          <button 
                            onClick={() => copyToClipboard(account)}
                            className="text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                            title="Copy address"
                          >
                            {copied ? 
                              <FiCheck className="w-4 h-4 text-green-500" /> : 
                              <FiCopy className="w-4 h-4" />
                            }
                          </button>
                        </div>
                      </div>
                    </div>
                    <button
                      onClick={() => setConnected(false)}
                      className="text-sm text-red-500 hover:text-red-600 dark:text-red-400 dark:hover:text-red-300 transition-colors"
                    >
                      Disconnect
                    </button>
                  </div>
                </div>

                {/* Allowance Input */}
                <div className="space-y-2">
                  <label htmlFor="allowance" className="block text-sm font-medium text-gray-700 dark:text-gray-300">
                    Spending Allowance (ETH)
                  </label>
                  <div className="relative">
                    <input
                      type="number"
                      id="allowance"
                      value={allowance}
                      onChange={(e) => setAllowance(e.target.value)}
                      className="block w-full px-4 py-3 pr-12 border border-gray-300 dark:border-slate-600 rounded-lg bg-white dark:bg-slate-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all"
                      placeholder="0.00"
                      step="0.000000000000000001"
                      min="0"
                    />
                    <div className="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                      <span className="text-gray-500 dark:text-gray-400 text-sm">ETH</span>
                    </div>
                  </div>
                  <p className="text-xs text-gray-500 dark:text-gray-400">
                    Maximum amount the spender can transfer from your account
                  </p>
                </div>

                {/* Action Buttons */}
                <div className="pt-2">
                  <button
                    onClick={handleCreatePermission}
                    disabled={loading || !allowance || parseFloat(allowance) <= 0}
                    className="w-full flex items-center justify-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    {loading ? (
                      <>
                        <FiLoader className="animate-spin w-5 h-5 mr-2" />
                        <span>Creating Permission...</span>
                      </>
                    ) : (
                      <>
                        <FiShield className="w-5 h-5 mr-2" />
                        <span>Create Spend Permission</span>
                      </>
                    )}
                  </button>
                </div>

                {/* Permission Details */}
                {permission && (
                  <div className="mt-6 border-t border-gray-200 dark:border-slate-700 pt-6">
                    <h3 className="text-lg font-medium text-gray-900 dark:text-white mb-4 flex items-center">
                      <FiCheckCircle className="w-5 h-5 text-green-500 mr-2" />
                      Permission Created
                    </h3>
                    <div className="space-y-3">
                      <div className="flex justify-between">
                        <span className="text-sm text-gray-500 dark:text-gray-400">Spender</span>
                        <div className="flex items-center">
                          <span className="font-mono text-sm text-gray-900 dark:text-white">
                            {formatAddress(permission.permission.spender)}
                          </span>
                          <button 
                            onClick={() => copyToClipboard(permission.permission.spender)}
                            className="ml-2 text-gray-400 hover:text-blue-600 dark:hover:text-blue-400 transition-colors"
                            title="Copy address"
                          >
                            {copied ? 
                              <FiCheck className="w-4 h-4 text-green-500" /> : 
                              <FiCopy className="w-4 h-4" />
                            }
                          </button>
                        </div>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-sm text-gray-500 dark:text-gray-400">Allowance</span>
                        <span className="text-sm font-medium text-gray-900 dark:text-white">
                          {formatEther(permission.permission.allowance)} ETH
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-sm text-gray-500 dark:text-gray-400">Expires</span>
                        <div className="flex items-center text-sm text-gray-900 dark:text-white">
                          <FiClock className="w-4 h-4 mr-1 text-gray-400" />
                          <span>30 days</span>
                        </div>
                      </div>
                    </div>
                    
                    <div className="mt-6 bg-blue-50 dark:bg-slate-800/50 p-4 rounded-lg">
                      <h4 className="text-sm font-medium text-blue-800 dark:text-blue-300 mb-2 flex items-center">
                        <FiAlertCircle className="w-4 h-4 mr-2" />
                        Next Steps
                      </h4>
                      <p className="text-sm text-blue-700 dark:text-blue-400">
                        Your permission has been created and signed. The spender can now use this permission to transfer up to {formatEther(permission.permission.allowance)} ETH from your account.
                      </p>
                    </div>
                  </div>
                )}
              </div>
            )}
          </div>
        </div>

        {/* Footer */}
        <footer className="mt-12 text-center text-sm text-gray-500 dark:text-gray-400">
          <p>Built with ❤️ on Base</p>
          <p className="mt-1">
            <a 
              href="https://base.org" 
              target="_blank" 
              rel="noopener noreferrer"
              className="text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 transition-colors"
            >
              Learn more about Base
            </a>
          </p>
        </footer>
      </div>
    </div>
                          <span className="font-mono text-sm text-slate-800 dark:text-slate-200">{formatAddress(permission?.permission.account)}</span>
                          <button 
                            onClick={() => copyToClipboard(permission?.permission.account)}
                            className="ml-2 p-1.5 text-slate-400 hover:text-blue-600 dark:hover:text-blue-400 rounded-full hover:bg-slate-100 dark:hover:bg-slate-700/50 transition-colors"
                            title="Copy address"
                          >
                            {copied ? (
                              <FiCheck className="w-3.5 h-3.5 text-green-500" />
                            ) : (
                              <FiCopy className="w-3.5 h-3.5" />
                            )}
                          </button>
                        </div>
                      </div>
                      
                      <div className="flex justify-between items-center p-3 bg-white dark:bg-slate-800/80 rounded-lg border border-slate-100 dark:border-slate-700/50">
                        <div className="flex items-center space-x-2">
                          <div className="p-1.5 bg-indigo-100 dark:bg-indigo-900/30 rounded-lg">
                            <FiShield className="w-4 h-4 text-indigo-600 dark:text-indigo-400" />
                          </div>
                          <span className="text-sm font-medium text-slate-700 dark:text-slate-300">Spender Address</span>
                        </div>
                        <div className="flex items-center">
                          <span className="font-mono text-sm text-slate-800 dark:text-slate-200">{formatAddress(permission?.permission.spender)}</span>
                          <button 
                            onClick={() => copyToClipboard(permission?.permission.spender)}
                            className="ml-2 p-1.5 text-slate-400 hover:text-blue-600 dark:hover:text-blue-400 rounded-full hover:bg-slate-100 dark:hover:bg-slate-700/50 transition-colors"
                            title="Copy address"
                          >
                            {copied ? (
                              <FiCheck className="w-3.5 h-3.5 text-green-500" />
                            ) : (
                              <FiCopy className="w-3.5 h-3.5" />
                            )}
                          </button>
                        </div>
                      </div>
                      
                      <div className="flex justify-between items-center p-3 bg-white dark:bg-slate-800/80 rounded-lg border border-slate-100 dark:border-slate-700/50">
                        <div className="flex items-center space-x-2">
                          <div className="p-1.5 bg-emerald-100 dark:bg-emerald-900/30 rounded-lg">
                            <FiDollarSign className="w-4 h-4 text-emerald-600 dark:text-emerald-400" />
                          </div>
                          <span className="text-sm font-medium text-slate-700 dark:text-slate-300">Allowance</span>
                        </div>
                        <span className="font-medium text-slate-800 dark:text-slate-200">{allowance} ETH / 30 days</span>
                      </div>
                      
                      <div className="flex justify-between items-center p-3 bg-white dark:bg-slate-800/80 rounded-lg border border-slate-100 dark:border-slate-700/50">
                        <div className="flex items-center space-x-2">
                          <div className="p-1.5 bg-green-100 dark:bg-green-900/30 rounded-lg">
                            <FiCheckCircle className="w-4 h-4 text-green-600 dark:text-green-400" />
                          </div>
                          <span className="text-sm font-medium text-slate-700 dark:text-slate-300">Status</span>
                        </div>
                        <span className="inline-flex items-center px-2.5 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400">
                          Active
                        </span>
                      </div>
                    </div>
                  </div>

                  <div className="pt-6 border-t border-slate-100 dark:border-slate-700/50">
                    <h4 className="text-xs font-semibold text-slate-500 dark:text-slate-400 uppercase tracking-wider mb-4">Next Steps</h4>
                    <ol className="space-y-3">
                      <li className="flex items-start group">
                        <span className="flex-shrink-0 flex items-center justify-center w-6 h-6 rounded-full bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-400 text-xs font-medium mr-3 mt-0.5 transition-colors group-hover:bg-blue-600 group-hover:text-white dark:group-hover:bg-blue-600 dark:group-hover:text-white">
                          1
                        </span>
                        <span className="text-sm text-slate-700 dark:text-slate-300">
                          Open Browser console (F12) to copy the permission details
                        </span>
                      </li>
                      <li className="flex items-start group">
                        <span className="flex-shrink-0 flex items-center justify-center w-6 h-6 rounded-full bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-400 text-xs font-medium mr-3 mt-0.5 transition-colors group-hover:bg-blue-600 group-hover:text-white dark:group-hover:bg-blue-600 dark:group-hover:text-white">
                          2
                        </span>
                        <span className="text-sm text-slate-700 dark:text-slate-300">
                          Paste into <code className="px-1.5 py-0.5 bg-slate-100 dark:bg-slate-700/50 rounded text-sm font-mono text-slate-800 dark:text-slate-200">backend/approvePermission.js</code>
                        </span>
                      </li>
                      <li className="flex items-start group">
                        <span className="flex-shrink-0 flex items-center justify-center w-6 h-6 rounded-full bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-400 text-xs font-medium mr-3 mt-0.5 transition-colors group-hover:bg-blue-600 group-hover:text-white dark:group-hover:bg-blue-600 dark:group-hover:text-white">
                          3
                        </span>
                        <span className="text-sm text-slate-700 dark:text-slate-300">
                          Run: <code className="px-1.5 py-0.5 bg-slate-100 dark:bg-slate-700/50 rounded text-sm font-mono text-slate-800 dark:text-slate-200">npm run approve</code>
                        </span>
                      </li>
                      <li className="flex items-start group">
                        <span className="flex-shrink-0 flex items-center justify-center w-6 h-6 rounded-full bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-400 text-xs font-medium mr-3 mt-0.5 transition-colors group-hover:bg-blue-600 group-hover:text-white dark:group-hover:bg-blue-600 dark:group-hover:text-white">
                          4
                        </span>
                        <span className="text-sm text-slate-700 dark:text-slate-300">
                          Then run: <code className="px-1.5 py-0.5 bg-slate-100 dark:bg-slate-700/50 rounded text-sm font-mono text-slate-800 dark:text-slate-200">npm run spend</code>
                        </span>
                      </li>
                    </ol>
                  </div>
                </div>
              </div>
            )}
          </div>
        </div>
        
        {/* Footer */}
        <footer className="mt-12 text-center">
          <div className="inline-flex items-center px-5 py-2.5 bg-white dark:bg-slate-800 rounded-full border border-slate-200 dark:border-slate-700 shadow-sm">
            <div className="flex items-center space-x-3 text-sm">
              <span className="flex items-center text-slate-700 dark:text-slate-300">
                <span className="w-2 h-2 mr-2 rounded-full bg-green-500 animate-pulse"></span>
                <span className="font-medium">BASE SEPOLIA TESTNET</span>
              </span>
              <span className="h-4 w-px bg-slate-200 dark:bg-slate-700"></span>
              <a 
                href={`https://sepolia.basescan.org/address/${account}`} 
                target="_blank" 
                rel="noopener noreferrer"
                className="text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 flex items-center font-medium transition-colors"
              >
                <span>View on Explorer</span>
                <FiExternalLink className="ml-1.5 w-3.5 h-3.5" />
              </a>
            </div>
          </div>
          <p className="mt-4 text-xs text-slate-500 dark:text-slate-500">
            Secured by Base Network
          </p>
        </footer>
      </div>
    </div>
  );
}